import{_ as e,c as s,o as t,ae as r}from"./chunks/framework.Dh1jimFm.js";const j=JSON.parse('{"title":"js","description":"","frontmatter":{},"headers":[],"relativePath":"doc/1基础/2-js/js.md","filePath":"doc/1基础/2-js/js.md"}'),o={name:"doc/1基础/2-js/js.md"};function i(n,a,d,p,c,_){return t(),s("div",null,a[0]||(a[0]=[r('<h1 id="js" tabindex="-1">js <a class="header-anchor" href="#js" aria-label="Permalink to &quot;js&quot;">​</a></h1><h2 id="_1、js是一种单线程语言" tabindex="-1">1、js是一种单线程语言 <a class="header-anchor" href="#_1、js是一种单线程语言" aria-label="Permalink to &quot;1、js是一种单线程语言&quot;">​</a></h2><p>为避免多线程同时操作dom等冲突问题，js被设计成单线程语言。</p><p><code>浏览器提供了机制（时间循环、web worker），让js可以模拟多线程</code></p><h2 id="_2、事件循环" tabindex="-1">2、事件循环 <a class="header-anchor" href="#_2、事件循环" aria-label="Permalink to &quot;2、事件循环&quot;">​</a></h2><p><strong>事件循环流程</strong>： 同步代码 → 清空微任务队列 → 执行下一个宏任务 → 重复循环</p><p>![image-20250305110304811](/Users/soup/Library/Application Support/typora-user-images/image-20250305110304811.png)</p>',7)]))}const h=e(o,[["render",i]]);export{j as __pageData,h as default};
